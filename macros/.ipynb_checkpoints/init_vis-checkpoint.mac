#/run/initialize

# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors

/vis/viewer/set/background white
/vis/drawVolume worlds
/vis/viewer/set/style surface

#
# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 110 165 deg
/vis/viewer/set/lightsThetaPhi 130 120 deg
/vis/viewer/panTo -1 -.2 m

# Draw coordinate axes:
/vis/scene/add/axes 0 0 0 1 m

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByParticleID-0/set e- blue
/vis/modeling/trajectories/drawByParticleID-0/set e+ red
/vis/modeling/trajectories/drawByParticleID-0/setRGBA proton .4 0 0 1
/vis/modeling/trajectories/drawByParticleID-0/setRGBA neutron .95 .9 0 1
/vis/modeling/trajectories/drawByParticleID-0/setRGBA gamma .53 .95 1 .7

/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

/vis/ogl/set/displayListLimit 3000000
